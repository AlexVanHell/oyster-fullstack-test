version: '3.7'

networks:
  database:

volumes:
  mongo_data:

services:
  database:
    image: mongo:4.4
    container_name: oyster-test-database-prod
    env_file: .env.prod
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27017:27017
    volumes:
      - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - mongo_data:/data/db/
      - ./.docker/mongodb/data/log/:/var/log/mongodb/
    networks:
      database:
        aliases:
          - database
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.prod
    container_name: oyster-test-backend-prod
    env_file: .env.prod
    working_dir: /app
    depends_on:
      - database
    ports:
      - 3000:3000
    networks:
      database:
    command: ['yarn', 'start:prod']
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.prod
    container_name: oyster-test-frontend-prod
    env_file: .env.prod
    ports:
      - 3001:80
    depends_on:
      - backend
